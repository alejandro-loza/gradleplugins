package com.training.gradleplugins.core;// default package
// Generated 10/04/2014 12:23:33 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * Brand generated by hbm2java
 */
@Entity
@Table(name = "brand")
public class Brand implements java.io.Serializable {

	private Long id;
	private long version;
	private Vertical vertical;
	private Date dateCreated;
	private boolean deleted;
	private String description;
	private Date lastUpdated;
	private String logo;
	private String name;
	private Set<ItemGroup> itemGroups = new HashSet<ItemGroup>(0);
//	private Set<WishListItem> wishListItems = new HashSet<WishListItem>(0);

	public Brand() {
	}

	public Brand(Vertical vertical, Date dateCreated, boolean deleted,
			Date lastUpdated, String name) {
		this.vertical = vertical;
		this.dateCreated = dateCreated;
		this.deleted = deleted;
		this.lastUpdated = lastUpdated;
		this.name = name;
	}

	public Brand(Vertical vertical, Date dateCreated, boolean deleted,
			String description, Date lastUpdated, String logo, String name,
			Set<ItemGroup> itemGroups) {
		this.vertical = vertical;
		this.dateCreated = dateCreated;
		this.deleted = deleted;
		this.description = description;
		this.lastUpdated = lastUpdated;
		this.logo = logo;
		this.name = name;
		this.itemGroups = itemGroups;

	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Version
	@Column(name = "version", nullable = false)
	public long getVersion() {
		return this.version;
	}

	public void setVersion(long version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "vertical_id", nullable = false)
	public Vertical getVertical() {
		return this.vertical;
	}

	public void setVertical(Vertical vertical) {
		this.vertical = vertical;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_created", nullable = false, length = 0)
	public Date getDateCreated() {
		return this.dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	@Column(name = "deleted", nullable = false)
	public boolean isDeleted() {
		return this.deleted;
	}

	public void setDeleted(boolean deleted) {
		this.deleted = deleted;
	}

	@Column(name = "description", length = 100)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated", nullable = false, length = 0)
	public Date getLastUpdated() {
		return this.lastUpdated;
	}

	public void setLastUpdated(Date lastUpdated) {
		this.lastUpdated = lastUpdated;
	}

	@Column(name = "logo")
	public String getLogo() {
		return this.logo;
	}

	public void setLogo(String logo) {
		this.logo = logo;
	}

	@Column(name = "name", nullable = false, length = 25)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "brand")
	public Set<ItemGroup> getItemGroups() {
		return this.itemGroups;
	}

	public void setItemGroups(Set<ItemGroup> itemGroups) {
		this.itemGroups = itemGroups;
	}



}
