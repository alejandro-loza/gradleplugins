package com.training.gradleplugins.core;// default package
// Generated 10/04/2014 12:23:33 PM by Hibernate Tools 3.4.0.CR1

import org.hibernate.annotations.NamedQueries;
import org.hibernate.annotations.NamedQuery;

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

/**
 * Vertical generated by hbm2java
 */
@NamedQueries({
        @NamedQuery(
                name = "com.training.gradleplugins.core.Vertical.findAll",
                query = "SELECT v FROM Vertical v"
        )
})
@Entity
@Table(name = "vertical", catalog = "winbits", uniqueConstraints = {
		@UniqueConstraint(columnNames = "base_url"),
		@UniqueConstraint(columnNames = "name") })
public class Vertical implements java.io.Serializable {

	private Long id;
	private long version;
	private String baseUrl;
	private String logo;
	private BigDecimal maxPerVertical;
	private String name;
	private Set<ItemGroupProfile> itemGroupProfiles = new HashSet<ItemGroupProfile>(
			0);
//	private Set<SkuProfile> skuProfiles = new HashSet<SkuProfile>(0);
	private Set<Brand> brands = new HashSet<Brand>(0);
//	private Set<Orders> orderses = new HashSet<Orders>(0);
//	private Set<ApiUser> apiUsers = new HashSet<ApiUser>(0);
//	private Set<Provider> providers = new HashSet<Provider>(0);
//	private Set<User> users = new HashSet<User>(0);
//	private Set<Seller> sellers = new HashSet<Seller>(0);
//	private Set<Image> images = new HashSet<Image>(0);
//	private Set<Subscription> subscriptions = new HashSet<Subscription>(0);
	private Set<ItemGroup> itemGroups = new HashSet<ItemGroup>(0);

	public Vertical() {
	}

	public Vertical(String baseUrl, BigDecimal maxPerVertical, String name) {
		this.baseUrl = baseUrl;
		this.maxPerVertical = maxPerVertical;
		this.name = name;
	}

	public Vertical(String baseUrl, String logo, BigDecimal maxPerVertical,
			String name, Set<ItemGroupProfile> itemGroupProfiles,
//			Set<SkuProfile> skuProfiles, Set<Brand> brands,
//			Set<Orders> orderses, Set<ApiUser> apiUsers,
//			Set<Provider> providers, Set<User> users, Set<Seller> sellers,
//			Set<Image> images, Set<Subscription> subscriptions,
			Set<ItemGroup> itemGroups) {
		this.baseUrl = baseUrl;
		this.logo = logo;
		this.maxPerVertical = maxPerVertical;
		this.name = name;
		this.itemGroupProfiles = itemGroupProfiles;
//		this.skuProfiles = skuProfiles;
		this.brands = brands;
//		this.orderses = orderses;
//		this.apiUsers = apiUsers;
//		this.providers = providers;
//		this.users = users;
//		this.sellers = sellers;
//		this.images = images;
//		this.subscriptions = subscriptions;
		this.itemGroups = itemGroups;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Version
	@Column(name = "version", nullable = false)
	public long getVersion() {
		return this.version;
	}

	public void setVersion(long version) {
		this.version = version;
	}

	@Column(name = "base_url", unique = true, nullable = false)
	public String getBaseUrl() {
		return this.baseUrl;
	}

	public void setBaseUrl(String baseUrl) {
		this.baseUrl = baseUrl;
	}

	@Column(name = "logo")
	public String getLogo() {
		return this.logo;
	}

	public void setLogo(String logo) {
		this.logo = logo;
	}

	@Column(name = "max_per_vertical", nullable = false)
	public BigDecimal getMaxPerVertical() {
		return this.maxPerVertical;
	}

	public void setMaxPerVertical(BigDecimal maxPerVertical) {
		this.maxPerVertical = maxPerVertical;
	}

	@Column(name = "name", unique = true, nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vertical")
	public Set<ItemGroupProfile> getItemGroupProfiles() {
		return this.itemGroupProfiles;
	}

	public void setItemGroupProfiles(Set<ItemGroupProfile> itemGroupProfiles) {
		this.itemGroupProfiles = itemGroupProfiles;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vertical")
//	public Set<SkuProfile> getSkuProfiles() {
//		return this.skuProfiles;
//	}
//
//	public void setSkuProfiles(Set<SkuProfile> skuProfiles) {
//		this.skuProfiles = skuProfiles;
//	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vertical")
	public Set<Brand> getBrands() {
		return this.brands;
	}

	public void setBrands(Set<Brand> brands) {
		this.brands = brands;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vertical")
//	public Set<Orders> getOrderses() {
//		return this.orderses;
//	}
//
//	public void setOrderses(Set<Orders> orderses) {
//		this.orderses = orderses;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vertical")
//	public Set<ApiUser> getApiUsers() {
//		return this.apiUsers;
//	}
//
//	public void setApiUsers(Set<ApiUser> apiUsers) {
//		this.apiUsers = apiUsers;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vertical")
//	public Set<Provider> getProviders() {
//		return this.providers;
//	}
//
//	public void setProviders(Set<Provider> providers) {
//		this.providers = providers;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vertical")
//	public Set<User> getUsers() {
//		return this.users;
//	}
//
//	public void setUsers(Set<User> users) {
//		this.users = users;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vertical")
//	public Set<Seller> getSellers() {
//		return this.sellers;
//	}
//
//	public void setSellers(Set<Seller> sellers) {
//		this.sellers = sellers;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vertical")
//	public Set<Image> getImages() {
//		return this.images;
//	}
//
//	public void setImages(Set<Image> images) {
//		this.images = images;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vertical")
//	public Set<Subscription> getSubscriptions() {
//		return this.subscriptions;
//	}
//
//	public void setSubscriptions(Set<Subscription> subscriptions) {
//		this.subscriptions = subscriptions;
//	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vertical")
	public Set<ItemGroup> getItemGroups() {
		return this.itemGroups;
	}

	public void setItemGroups(Set<ItemGroup> itemGroups) {
		this.itemGroups = itemGroups;
	}

}
